package View;

import Funcoes.Transparencia;
import connection.ConnectionFactory;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.net.URL;
import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author William Pereira
 * @version 2.0 =========== Atualizações ================= atualizações no
 * cadastro de funcionário (editar funcionário, troca de sexo, refresh na lista,
 * mascara campos)
 *
 * atualização do Chamado (data do chamado puxando certo, removi a mensagem que
 * dava ao editar chamado, pesquisando por ID e Funcionário)
 */
public class LoginNew3 extends javax.swing.JFrame {

    PreparedStatement pst = null;
    ResultSet rs = null;

    int xMouse;
    int yMouse;

    public LoginNew3() throws UnknownHostException, SocketException {
        //ICONE FRAME
        URL caminhoIcone = getClass().getResource("/imagem/Logo128x128.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);

        Transparencia t = new Transparencia();
        t.aplicarTransparencia(this);
        initComponents();

        txt_Login.setFocusable(true);

        //busca o ip
        InetAddress ip;
        ip = InetAddress.getLocalHost();
        lb_Ip.setText(ip.getHostAddress());

        //busca o mac
        NetworkInterface network = NetworkInterface.getByInetAddress(ip);
        byte[] mac = network.getHardwareAddress();
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < mac.length; i++) {
            sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));
        }
        lb_mac.setText(sb.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_infos = new javax.swing.JPanel();
        SeuIp = new javax.swing.JLabel();
        SeuMac = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lb_Ip = new javax.swing.JLabel();
        lb_mac = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_Login = new javax.swing.JTextField();
        txt_Senha = new javax.swing.JPasswordField();
        btn_login = new javax.swing.JButton();
        btn_cancela = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jp_infos.setOpaque(false);

        SeuIp.setForeground(new java.awt.Color(255, 255, 255));
        SeuIp.setText("Seu ip:");

        SeuMac.setForeground(new java.awt.Color(255, 255, 255));
        SeuMac.setText("Seu mac:");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Versão:");

        lb_Ip.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lb_Ip.setForeground(new java.awt.Color(255, 255, 255));
        lb_Ip.setText("192.168.0.xxx");

        lb_mac.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lb_mac.setForeground(new java.awt.Color(255, 255, 255));
        lb_mac.setText("A1 D3 F4 K1");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("2.0");

        javax.swing.GroupLayout jp_infosLayout = new javax.swing.GroupLayout(jp_infos);
        jp_infos.setLayout(jp_infosLayout);
        jp_infosLayout.setHorizontalGroup(
            jp_infosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_infosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SeuIp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_Ip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SeuMac)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_mac, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jp_infosLayout.setVerticalGroup(
            jp_infosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_infosLayout.createSequentialGroup()
                .addGroup(jp_infosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jp_infosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel5)
                        .addComponent(lb_mac))
                    .addGroup(jp_infosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SeuIp)
                        .addComponent(lb_Ip)
                        .addComponent(SeuMac)))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(jp_infos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 470, 400, 20));

        txt_Login.setForeground(new java.awt.Color(153, 153, 153));
        txt_Login.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_LoginFocusLost(evt);
            }
        });
        txt_Login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_LoginMouseClicked(evt);
            }
        });
        txt_Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_LoginActionPerformed(evt);
            }
        });
        getContentPane().add(txt_Login, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, 260, 30));

        txt_Senha.setForeground(new java.awt.Color(153, 153, 153));
        txt_Senha.setText("Sua Senha...");
        txt_Senha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_SenhaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_SenhaFocusLost(evt);
            }
        });
        txt_Senha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_SenhaMouseClicked(evt);
            }
        });
        txt_Senha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_SenhaKeyPressed(evt);
            }
        });
        getContentPane().add(txt_Senha, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, 260, 30));

        btn_login.setBackground(new java.awt.Color(0, 102, 102));
        btn_login.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_login.setForeground(new java.awt.Color(255, 255, 255));
        btn_login.setText("LOGAR");
        btn_login.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_login.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_loginMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_loginMouseExited(evt);
            }
        });
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });
        getContentPane().add(btn_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 100, 30));

        btn_cancela.setBackground(new java.awt.Color(0, 102, 102));
        btn_cancela.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_cancela.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancela.setText("CANCELAR");
        btn_cancela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btn_cancelaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btn_cancelaMouseExited(evt);
            }
        });
        btn_cancela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_cancela, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 360, 100, 30));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/BackGround2.PNG"))); // NOI18N
        Background.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                BackgroundMouseDragged(evt);
            }
        });
        Background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BackgroundMousePressed(evt);
            }
        });
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btn_cancelaActionPerformed

    private void BackgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackgroundMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_BackgroundMouseDragged

    private void BackgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackgroundMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_BackgroundMousePressed

    private void txt_LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_LoginActionPerformed
        if (txt_Login.getText().equals("Digite Seu Login...")) {
            txt_Login.setText("");
        }
    }//GEN-LAST:event_txt_LoginActionPerformed

    private void txt_LoginFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_LoginFocusLost
        if (txt_Login.getText().equals("")) {
            txt_Login.setText("Digite Seu Login...");
        }
    }//GEN-LAST:event_txt_LoginFocusLost

    private void txt_LoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_LoginMouseClicked
        if (txt_Login.getText().equals("Digite Seu Login...")) {
            txt_Login.setText("");
        }
    }//GEN-LAST:event_txt_LoginMouseClicked

    private void txt_SenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_SenhaFocusGained
        if (new String(txt_Senha.getPassword()).equals("Sua Senha...")) {
            txt_Senha.setText("");
        }
    }//GEN-LAST:event_txt_SenhaFocusGained

    private void txt_SenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SenhaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String sql = "select * from usuarios where usuario=? and senha=?";
            try {
                Connection con = ConnectionFactory.getConnection();
                pst = con.prepareStatement(sql);
                pst.setString(1, txt_Login.getText());
                pst.setString(2, new String(txt_Senha.getPassword()));
                rs = pst.executeQuery();
                if (rs.next()) {
                    //userlogado2.setText(rs.getString(2));
                    Principal3.userLogado3 = rs.getString(2);//PASSA O STRING DA SEGUNDA POSIÇÃO DO BANCO QUE É O NOME DO USUARIO
                    Principal3.idLogado3 = rs.getInt(1);//PASSA O INT DA PRIMEIRA POSIÇÃO DO BANCO QUE É O ID DO USUARIO
                    new Principal3(rs.getString(2), rs.getInt(1)).setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Login ou senha errada!");
                    txt_Login.setBorder(new LineBorder(Color.RED));
                    txt_Login.setText("");
                    txt_Login.requestFocus();
                    txt_Senha.setText("Sua Senha...");
                    return;
                    
                }
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, "Servidor não encontrado!, verifique se o banco de dados está ativo! ");
            } catch (SocketException ex) {
                Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnknownHostException ex) {
                Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_txt_SenhaKeyPressed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        String sql = "select * from usuarios where usuario=? and senha=?";
            try {
                Connection con = ConnectionFactory.getConnection();
                pst = con.prepareStatement(sql);
                pst.setString(1, txt_Login.getText());
                pst.setString(2, new String(txt_Senha.getPassword()));
                rs = pst.executeQuery();
                if (rs.next()) {
                    //userlogado2.setText(rs.getString(2));
                    Principal3.userLogado3 = rs.getString(2);//PASSA O STRING DA SEGUNDA POSIÇÃO DO BANCO QUE É O NOME DO USUARIO
                    Principal3.idLogado3 = rs.getInt(1);//PASSA O INT DA PRIMEIRA POSIÇÃO DO BANCO QUE É O ID DO USUARIO
                    new Principal3(rs.getString(2), rs.getInt(1)).setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Login ou senha errada!");
                    txt_Login.setBorder(new LineBorder(Color.RED));
                    txt_Login.setText("");
                    txt_Login.requestFocus();
                    txt_Senha.setText("Sua Senha...");
                    return;
                }
            } catch (SQLException | HeadlessException ex) {
                JOptionPane.showMessageDialog(null, "Servidor não encontrado!, verifique se o banco de dados está ativo! ");
            } catch (SocketException ex) {
                Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnknownHostException ex) {
                Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
            Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_loginActionPerformed

    private void txt_SenhaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_SenhaMouseClicked
        if (txt_Senha.getPassword().equals("Sua Senha...")) {
            txt_Senha.setText("");
        }
    }//GEN-LAST:event_txt_SenhaMouseClicked

    private void txt_SenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_SenhaFocusLost
        if (txt_Senha.getPassword().equals("")) {
            txt_Senha.setText("Sua Senha...");
        }
    }//GEN-LAST:event_txt_SenhaFocusLost

    private void btn_loginMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_loginMouseEntered
        btn_login.setBackground(new Color(241, 117, 9));
    }//GEN-LAST:event_btn_loginMouseEntered

    private void btn_loginMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_loginMouseExited
        btn_login.setBackground(new Color(0,102,102));
    }//GEN-LAST:event_btn_loginMouseExited

    private void btn_cancelaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cancelaMouseEntered
        btn_cancela.setBackground(new Color(241, 117, 9));
    }//GEN-LAST:event_btn_cancelaMouseEntered

    private void btn_cancelaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cancelaMouseExited
        btn_cancela.setBackground(new Color(0,102,102));
    }//GEN-LAST:event_btn_cancelaMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginNew3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginNew3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginNew3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginNew3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    try {
                        new LoginNew3().setVisible(true);
                    } catch (SocketException ex) {
                        Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } catch (UnknownHostException ex) {
                    Logger.getLogger(LoginNew3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        //FUNÇÃO QUE BUSCA 
        InetAddress ip;
        try {

            ip = InetAddress.getLocalHost();
            System.out.println("Current IP address : " + ip.getHostAddress());

            NetworkInterface network = NetworkInterface.getByInetAddress(ip);

            byte[] mac = network.getHardwareAddress();

            System.out.print("Current MAC address : ");

            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < mac.length; i++) {
                sb.append(String.format("%02X%s", mac[i], (i < mac.length - 1) ? "-" : ""));
            }
            System.out.println(sb.toString());

        } catch (UnknownHostException e) {

            e.printStackTrace();

        } catch (SocketException e) {

            e.printStackTrace();

        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JLabel SeuIp;
    private javax.swing.JLabel SeuMac;
    private javax.swing.JButton btn_cancela;
    private javax.swing.JButton btn_login;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jp_infos;
    private javax.swing.JLabel lb_Ip;
    private javax.swing.JLabel lb_mac;
    public static javax.swing.JTextField txt_Login;
    private javax.swing.JPasswordField txt_Senha;
    // End of variables declaration//GEN-END:variables

}
